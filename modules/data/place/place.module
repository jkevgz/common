<?php

use Drupal\place\Entity\Place;

/**
 * Implements hook_entity_bundle_info().
 */
function place_entity_bundle_info() {
  /** @var \Drupal\place\PlaceHandlerPluginManager $manager */
  $manager = \Drupal::service('plugin.manager.place.place_handler');

  $bundles = [];
  foreach ($manager->getDefinitions() as $plugin_id => $definition) {
    $bundles['place'][$plugin_id]['label'] = $definition['label'];
  }

  return $bundles;
}

/**
 * Implements hook_modules_installed().
 */
function place_modules_installed(array $modules) {
  /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
  $entity_type_manager = \Drupal::service('entity_type.manager');
  $place_base_field_definitions = Place::baseFieldDefinitions($entity_type_manager->getDefinition('place'));

  /** @var \Drupal\place\PlaceHandlerPluginManager $handler_manager */
  $handler_manager = \Drupal::service('plugin.manager.place.place_handler');
  /** @var \Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface $entity_update_manager */
  $entity_update_manager = \Drupal::service('entity.definition_update_manager');
  foreach ($handler_manager->getDefinitions() as $plugin_id => $definition) {
    if (in_array($definition['provider'], $modules)) {
      /** @var \Drupal\place\Plugin\PlaceHandler\PlaceHandlerInterface $plugin */
      $plugin = $handler_manager->createInstance($plugin_id);

      /** @var \Drupal\Core\Field\BaseFieldDefinition[] $bundle_field_definitions */
      $bundle_field_definitions = $plugin->fieldDefinitions($place_base_field_definitions);
      foreach ($bundle_field_definitions as $name => $field_definition) {
        if (in_array($field_definition->getProvider(), $modules)) {
          $entity_update_manager->installFieldStorageDefinition(
            $name,
            'place',
            $field_definition->getProvider(),
            $field_definition
          );
        }
      }
    }
  }
}
